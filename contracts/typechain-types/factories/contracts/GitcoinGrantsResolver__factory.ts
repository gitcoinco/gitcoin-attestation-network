/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  GitcoinGrantsResolver,
  GitcoinGrantsResolverInterface,
} from "../../contracts/GitcoinGrantsResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEAS",
        name: "eas",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_validDelegators",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAttester",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEAS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPayable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegator",
        type: "address",
      },
    ],
    name: "addValidDelegator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "attest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPayable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiAttest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiRevoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegator",
        type: "address",
      },
    ],
    name: "removeValidDelegator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "revoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "validDelegators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610ce1380380610ce183398101604081905261003091610199565b6001608052600360a052600060c05233826001600160a01b038116610068576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b0390811660e052811661009c57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100a58161010b565b5060005b81518110156101035760018060008484815181106100c9576100c961027e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016100a9565b505050610294565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461017057600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b80516101948161015b565b919050565b600080604083850312156101ac57600080fd5b82516101b78161015b565b60208401519092506001600160401b038111156101d357600080fd5b8301601f810185136101e457600080fd5b80516001600160401b038111156101fd576101fd610173565b604051600582901b90603f8201601f191681016001600160401b038111828210171561022b5761022b610173565b60405291825260208184018101929081018884111561024957600080fd5b6020850194505b8385101561026f5761026185610189565b815260209485019401610250565b50809450505050509250929050565b634e487b7160e01b600052603260045260246000fd5b60805160a05160c05160e051610a146102cd6000396000610642015260006102a201526000610279015260006102500152610a146000f3fe6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b1461018b57806391db0b7e146101b3578063ce46e046146101c6578063e49617e1146101da578063e60c3505146101ed578063f2fde38b1461020057600080fd5b806335ad92f9146100b857806354fd4d50146100d857806368628ea814610103578063715018a61461012357806377c7c4051461013857806388e5b2d91461017857600080fd5b366100b3575b005b600080fd5b3480156100c457600080fd5b506100b16100d33660046107b2565b610220565b3480156100e457600080fd5b506100ed610249565b6040516100fa9190610806565b60405180910390f35b34801561010f57600080fd5b506100b161011e3660046107b2565b6102ec565b34801561012f57600080fd5b506100b161031b565b34801561014457600080fd5b506101686101533660046107b2565b60016020526000908152604090205460ff1681565b60405190151581526020016100fa565b610168610186366004610885565b61032f565b34801561019757600080fd5b506000546040516001600160a01b0390911681526020016100fa565b6101686101c1366004610885565b6103fe565b3480156101d257600080fd5b506001610168565b6101686101e83660046108f6565b6104bd565b6101686101fb3660046108f6565b6104d0565b34801561020c57600080fd5b506100b161021b3660046107b2565b6104e4565b610228610527565b6001600160a01b03166000908152600160205260409020805460ff19169055565b60606102747f0000000000000000000000000000000000000000000000000000000000000000610554565b61029d7f0000000000000000000000000000000000000000000000000000000000000000610554565b6102c67f0000000000000000000000000000000000000000000000000000000000000000610554565b6040516020016102d893929190610932565b604051602081830303815290604052905090565b6102f4610527565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b610323610527565b61032d60006105e7565b565b6000610339610637565b8382811461035a5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156103ee57600086868381811061037a5761037a610991565b905060200201359050828111156103a45760405163044044a560e21b815260040160405180910390fd5b6103d18989848181106103b9576103b9610991565b90506020028101906103cb91906109a7565b50600090565b6103e25760009450505050506103f6565b9091039060010161035e565b506001925050505b949350505050565b6000610408610637565b838281146104295760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156103ee57600086868381811061044957610449610991565b905060200201359050828111156104735760405163044044a560e21b815260040160405180910390fd5b6104a089898481811061048857610488610991565b905060200281019061049a91906109a7565b82610680565b6104b15760009450505050506103f6565b9091039060010161042d565b60006104c7610637565b60005b92915050565b60006104da610637565b6104ca8234610680565b6104ec610527565b6001600160a01b03811661051b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610524816105e7565b50565b6000546001600160a01b0316331461032d5760405163118cdaa760e01b8152336004820152602401610512565b60606000610561836106da565b600101905060008167ffffffffffffffff811115610581576105816109c8565b6040519080825280601f01601f1916602001820160405280156105ab576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846105b557509392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461032d57604051634ca8886760e01b815260040160405180910390fd5b600080610694610100850160e086016107b2565b6001600160a01b03811660009081526001602052604090205490915060ff166106d057604051635c6d7aa160e11b815260040160405180910390fd5b5060019392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106107195772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610745576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061076357662386f26fc10000830492506010015b6305f5e100831061077b576305f5e100830492506008015b612710831061078f57612710830492506004015b606483106107a1576064830492506002015b600a83106104ca5760010192915050565b6000602082840312156107c457600080fd5b81356001600160a01b03811681146107db57600080fd5b9392505050565b60005b838110156107fd5781810151838201526020016107e5565b50506000910152565b60208152600082518060208401526108258160408501602087016107e2565b601f01601f19169190910160400192915050565b60008083601f84011261084b57600080fd5b50813567ffffffffffffffff81111561086357600080fd5b6020830191508360208260051b850101111561087e57600080fd5b9250929050565b6000806000806040858703121561089b57600080fd5b843567ffffffffffffffff8111156108b257600080fd5b6108be87828801610839565b909550935050602085013567ffffffffffffffff8111156108de57600080fd5b6108ea87828801610839565b95989497509550505050565b60006020828403121561090857600080fd5b813567ffffffffffffffff81111561091f57600080fd5b820161014081850312156107db57600080fd5b600084516109448184602089016107e2565b601760f91b90830190815284516109628160018401602089016107e2565b601760f91b6001929091019182015283516109848160028401602088016107e2565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e198336030181126109be57600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212206adec4332e68cd1a0c8307cc4b4a74a75d8b5d8fcd264fa8ea4f094ae819e9ba64736f6c634300081b0033";

type GitcoinGrantsResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GitcoinGrantsResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GitcoinGrantsResolver__factory extends ContractFactory {
  constructor(...args: GitcoinGrantsResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    eas: AddressLike,
    _validDelegators: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(eas, _validDelegators, overrides || {});
  }
  override deploy(
    eas: AddressLike,
    _validDelegators: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(eas, _validDelegators, overrides || {}) as Promise<
      GitcoinGrantsResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): GitcoinGrantsResolver__factory {
    return super.connect(runner) as GitcoinGrantsResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GitcoinGrantsResolverInterface {
    return new Interface(_abi) as GitcoinGrantsResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GitcoinGrantsResolver {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as GitcoinGrantsResolver;
  }
}
