/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  TokenResolver,
  TokenResolverInterface,
} from "../../../../../contracts/EAS/resolver/examples/TokenResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEAS",
        name: "eas",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEAS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPayable",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "attest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPayable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiAttest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiRevoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "revoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61014060405234801561001157600080fd5b506040516109ca3803806109ca8339810160408190526100309161009f565b6001608052600360a052600060c052826001600160a01b038116610067576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b0390811660e052919091166101005261012052506100e2565b6001600160a01b038116811461009c57600080fd5b50565b6000806000606084860312156100b457600080fd5b83516100bf81610087565b60208501519093506100d081610087565b80925050604084015190509250925092565b60805160a05160c05160e051610100516101205161089961013160003960006104510152600061047a0152600061040d01526000610170015260006101470152600061011e01526108996000f3fe6080604052600436106100595760003560e01c806354fd4d501461007c57806388e5b2d9146100a757806391db0b7e146100ca578063ce46e046146100dd578063e49617e1146100f1578063e60c35051461010457600080fd5b3661007757604051631574f9f360e01b815260040160405180910390fd5b600080fd5b34801561008857600080fd5b50610091610117565b60405161009e9190610642565b60405180910390f35b6100ba6100b53660046106c1565b6101ba565b604051901515815260200161009e565b6100ba6100d83660046106c1565b610289565b3480156100e957600080fd5b5060006100ba565b6100ba6100ff366004610732565b610348565b6100ba610112366004610732565b61035b565b60606101427f000000000000000000000000000000000000000000000000000000000000000061036f565b61016b7f000000000000000000000000000000000000000000000000000000000000000061036f565b6101947f000000000000000000000000000000000000000000000000000000000000000061036f565b6040516020016101a693929190610775565b604051602081830303815290604052905090565b60006101c4610402565b838281146101e55760405163251f56a160e21b815260040160405180910390fd5b3460005b82811015610279576000868683818110610205576102056107d4565b9050602002013590508281111561022f5760405163044044a560e21b815260040160405180910390fd5b61025c898984818110610244576102446107d4565b905060200281019061025691906107ea565b50600190565b61026d576000945050505050610281565b909103906001016101e9565b506001925050505b949350505050565b6000610293610402565b838281146102b45760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102795760008686838181106102d4576102d46107d4565b905060200201359050828111156102fe5760405163044044a560e21b815260040160405180910390fd5b61032b898984818110610313576103136107d4565b905060200281019061032591906107ea565b8261044d565b61033c576000945050505050610281565b909103906001016102b8565b6000610352610402565b60015b92915050565b6000610365610402565b610355823461044d565b6060600061037c83610546565b600101905060008167ffffffffffffffff81111561039c5761039c61080b565b6040519080825280601f01601f1916602001820160405280156103c6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846103d057509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461044b57604051634ca8886760e01b815260040160405180910390fd5b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663dd62ed3e6104b0610100870160e08801610821565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604401602060405180830381865afa1580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e919061084a565b101561053d576040516365ba6fc360e01b815260040160405180910390fd5b50600192915050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106105855772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106105b1576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106105cf57662386f26fc10000830492506010015b6305f5e10083106105e7576305f5e100830492506008015b61271083106105fb57612710830492506004015b6064831061060d576064830492506002015b600a83106103555760010192915050565b60005b83811015610639578181015183820152602001610621565b50506000910152565b602081526000825180602084015261066181604085016020870161061e565b601f01601f19169190910160400192915050565b60008083601f84011261068757600080fd5b50813567ffffffffffffffff81111561069f57600080fd5b6020830191508360208260051b85010111156106ba57600080fd5b9250929050565b600080600080604085870312156106d757600080fd5b843567ffffffffffffffff8111156106ee57600080fd5b6106fa87828801610675565b909550935050602085013567ffffffffffffffff81111561071a57600080fd5b61072687828801610675565b95989497509550505050565b60006020828403121561074457600080fd5b813567ffffffffffffffff81111561075b57600080fd5b8201610140818503121561076e57600080fd5b9392505050565b6000845161078781846020890161061e565b601760f91b90830190815284516107a581600184016020890161061e565b601760f91b6001929091019182015283516107c781600284016020880161061e565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e1983360301811261080157600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561083357600080fd5b81356001600160a01b038116811461076e57600080fd5b60006020828403121561085c57600080fd5b505191905056fea2646970667358221220d5dfd5a633271cd212fec48230e768a9a78850c3bf0d244293349d7aecab0fe464736f6c634300081b0033";

type TokenResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenResolver__factory extends ContractFactory {
  constructor(...args: TokenResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    eas: AddressLike,
    targetToken: AddressLike,
    targetAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      eas,
      targetToken,
      targetAmount,
      overrides || {}
    );
  }
  override deploy(
    eas: AddressLike,
    targetToken: AddressLike,
    targetAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      eas,
      targetToken,
      targetAmount,
      overrides || {}
    ) as Promise<
      TokenResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenResolver__factory {
    return super.connect(runner) as TokenResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenResolverInterface {
    return new Interface(_abi) as TokenResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenResolver {
    return new Contract(address, _abi, runner) as unknown as TokenResolver;
  }
}
