/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  AttestationResolver,
  AttestationResolverInterface,
} from "../../../../../contracts/EAS/resolver/examples/AttestationResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEAS",
        name: "eas",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEAS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "OutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "attest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPayable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiAttest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiRevoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "revoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
    ],
    name: "toBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610ce3380380610ce383398101604081905261003091610079565b6001608052600360a052600060c052806001600160a01b038116610067576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b031660e052506100a9565b60006020828403121561008b57600080fd5b81516001600160a01b03811681146100a257600080fd5b9392505050565b60805160a05160c05160e051610bfa6100e96000396000818161046a015261051c015260006101b901526000610190015260006101670152610bfa6000f3fe6080604052600436106100745760003560e01c806399dd9bd71161004e57806399dd9bd7146100f8578063ce46e04614610126578063e49617e11461013a578063e60c35051461014d57600080fd5b806354fd4d501461009757806388e5b2d9146100c257806391db0b7e146100e557600080fd5b3661009257604051631574f9f360e01b815260040160405180910390fd5b600080fd5b3480156100a357600080fd5b506100ac610160565b6040516100b99190610707565b60405180910390f35b6100d56100d0366004610785565b610203565b60405190151581526020016100b9565b6100d56100f3366004610785565b6102d2565b34801561010457600080fd5b5061011861011336600461088a565b610391565b6040519081526020016100b9565b34801561013257600080fd5b5060006100d5565b6100d561014836600461090b565b6103a4565b6100d561015b36600461090b565b6103b9565b606061018b7f00000000000000000000000000000000000000000000000000000000000000006103cd565b6101b47f00000000000000000000000000000000000000000000000000000000000000006103cd565b6101dd7f00000000000000000000000000000000000000000000000000000000000000006103cd565b6040516020016101ef93929190610946565b604051602081830303815290604052905090565b600061020d61045f565b8382811461022e5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102c257600086868381811061024e5761024e6109a5565b905060200201359050828111156102785760405163044044a560e21b815260040160405180910390fd5b6102a589898481811061028d5761028d6109a5565b905060200281019061029f91906109bb565b50600190565b6102b65760009450505050506102ca565b90910390600101610232565b506001925050505b949350505050565b60006102dc61045f565b838281146102fd5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102c257600086868381811061031d5761031d6109a5565b905060200201359050828111156103475760405163044044a560e21b815260040160405180910390fd5b61037489898481811061035c5761035c6109a5565b905060200281019061036e91906109bb565b826104aa565b6103855760009450505050506102ca565b90910390600101610301565b600061039d83836105da565b9392505050565b60006103ae61045f565b60015b90505b919050565b60006103c361045f565b6103b182346104aa565b606060006103da8361060a565b60010190506000816001600160401b038111156103f9576103f96107f4565b6040519080825280601f01601f191660200182016040528015610423576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461042d57509392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a857604051634ca8886760e01b815260040160405180910390fd5b565b6000806104f86104be6101208601866109dc565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525092506105da915050565b6040516328c44a9960e21b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a3112a6490602401600060405180830381865afa158015610563573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261058b9190810190610aa5565b6101208101515190915060201480156105d157507f45413545413545413545413545413545413545413545413545413545413500008161012001516105cf90610b9d565b145b95945050505050565b6000816020018351101561060157604051632d0483c560e21b815260040160405180910390fd5b50016020015190565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106106495772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610675576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061069357662386f26fc10000830492506010015b6305f5e10083106106ab576305f5e100830492506008015b61271083106106bf57612710830492506004015b606483106106d1576064830492506002015b600a83106106dd576001015b92915050565b60005b838110156106fe5781810151838201526020016106e6565b50506000910152565b60208152600082518060208401526107268160408501602087016106e3565b601f01601f19169190910160400192915050565b60008083601f84011261074c57600080fd5b5081356001600160401b0381111561076357600080fd5b6020830191508360208260051b850101111561077e57600080fd5b9250929050565b6000806000806040858703121561079b57600080fd5b84356001600160401b038111156107b157600080fd5b6107bd8782880161073a565b90955093505060208501356001600160401b038111156107dc57600080fd5b6107e88782880161073a565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b038111828210171561082d5761082d6107f4565b60405290565b604051601f8201601f191681016001600160401b038111828210171561085b5761085b6107f4565b604052919050565b60006001600160401b0382111561087c5761087c6107f4565b50601f01601f191660200190565b6000806040838503121561089d57600080fd5b82356001600160401b038111156108b357600080fd5b8301601f810185136108c457600080fd5b80356108d76108d282610863565b610833565b8181528660208385010111156108ec57600080fd5b8160208401602083013760006020928201830152969401359450505050565b60006020828403121561091d57600080fd5b81356001600160401b0381111561093357600080fd5b8201610140818503121561039d57600080fd5b600084516109588184602089016106e3565b601760f91b90830190815284516109768160018401602089016106e3565b601760f91b6001929091019182015283516109988160028401602088016106e3565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e198336030181126109d257600080fd5b9190910192915050565b6000808335601e198436030181126109f357600080fd5b8301803591506001600160401b03821115610a0d57600080fd5b60200191503681900382131561077e57600080fd5b80516001600160401b03811681146103b457600080fd5b80516001600160a01b03811681146103b457600080fd5b805180151581146103b457600080fd5b600082601f830112610a7157600080fd5b8151610a7f6108d282610863565b818152846020838601011115610a9457600080fd5b6102ca8260208301602087016106e3565b600060208284031215610ab757600080fd5b81516001600160401b03811115610acd57600080fd5b82016101408185031215610ae057600080fd5b610ae861080a565b8151815260208083015190820152610b0260408301610a22565b6040820152610b1360608301610a22565b6060820152610b2460808301610a22565b608082015260a08281015190820152610b3f60c08301610a39565b60c0820152610b5060e08301610a39565b60e0820152610b626101008301610a50565b6101008201526101208201516001600160401b03811115610b8257600080fd5b610b8e86828501610a60565b61012083015250949350505050565b80516020808301519190811015610bbe576000198160200360031b1b821691505b5091905056fea2646970667358221220dbc5e85eb31a707cb01956d5c9b2c637ab14124b33b0b78bb7fbda52b5c2a85464736f6c634300081b0033";

type AttestationResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttestationResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttestationResolver__factory extends ContractFactory {
  constructor(...args: AttestationResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    eas: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(eas, overrides || {});
  }
  override deploy(
    eas: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(eas, overrides || {}) as Promise<
      AttestationResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AttestationResolver__factory {
    return super.connect(runner) as AttestationResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttestationResolverInterface {
    return new Interface(_abi) as AttestationResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AttestationResolver {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AttestationResolver;
  }
}
