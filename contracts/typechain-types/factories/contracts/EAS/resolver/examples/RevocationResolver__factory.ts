/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  RevocationResolver,
  RevocationResolverInterface,
} from "../../../../../contracts/EAS/resolver/examples/RevocationResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEAS",
        name: "eas",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEAS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPayable",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "attest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPayable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiAttest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiRevoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "revoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setRevocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b506040516108b23803806108b283398101604081905261003091610079565b6001608052600360a052600060c052806001600160a01b038116610067576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b031660e052506100a9565b60006020828403121561008b57600080fd5b81516001600160a01b03811681146100a257600080fd5b9392505050565b60805160a05160c05160e0516107d06100e2600039600061045d015260006101bb015260006101920152600061016901526107d06000f3fe6080604052600436106100745760003560e01c8063ce46e0461161004e578063ce46e046146100fa578063e49617e11461010e578063e60c350514610121578063f545cb661461013457600080fd5b806354fd4d501461009957806388e5b2d9146100c457806391db0b7e146100e757600080fd5b3661009457604051631574f9f360e01b815260040160405180910390fd5b005b600080fd5b3480156100a557600080fd5b506100ae610162565b6040516100bb9190610599565b60405180910390f35b6100d76100d2366004610618565b610205565b60405190151581526020016100bb565b6100d76100f5366004610618565b6102d8565b34801561010657600080fd5b5060006100d7565b6100d761011c366004610689565b610397565b6100d761012f366004610689565b6103ae565b34801561014057600080fd5b5061009261014f3660046106cc565b6000805460ff1916911515919091179055565b606061018d7f00000000000000000000000000000000000000000000000000000000000000006103bf565b6101b67f00000000000000000000000000000000000000000000000000000000000000006103bf565b6101df7f00000000000000000000000000000000000000000000000000000000000000006103bf565b6040516020016101f1939291906106ee565b604051602081830303815290604052905090565b600061020f610452565b838281146102305760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102c85760008686838181106102505761025061074d565b9050602002013590508281111561027a5760405163044044a560e21b815260040160405180910390fd5b6102ab89898481811061028f5761028f61074d565b90506020028101906102a19190610763565b5060005460ff1690565b6102bc5760009450505050506102d0565b90910390600101610234565b506001925050505b949350505050565b60006102e2610452565b838281146103035760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102c85760008686838181106103235761032361074d565b9050602002013590508281111561034d5760405163044044a560e21b815260040160405180910390fd5b61037a8989848181106103625761036261074d565b90506020028101906103749190610763565b50600190565b61038b5760009450505050506102d0565b90910390600101610307565b60006103a1610452565b60005460ff165b92915050565b60006103b8610452565b60016103a8565b606060006103cc8361049d565b600101905060008167ffffffffffffffff8111156103ec576103ec610784565b6040519080825280601f01601f191660200182016040528015610416576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461042057509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461049b57604051634ca8886760e01b815260040160405180910390fd5b565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106104dc5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610508576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061052657662386f26fc10000830492506010015b6305f5e100831061053e576305f5e100830492506008015b612710831061055257612710830492506004015b60648310610564576064830492506002015b600a83106103a85760010192915050565b60005b83811015610590578181015183820152602001610578565b50506000910152565b60208152600082518060208401526105b8816040850160208701610575565b601f01601f19169190910160400192915050565b60008083601f8401126105de57600080fd5b50813567ffffffffffffffff8111156105f657600080fd5b6020830191508360208260051b850101111561061157600080fd5b9250929050565b6000806000806040858703121561062e57600080fd5b843567ffffffffffffffff81111561064557600080fd5b610651878288016105cc565b909550935050602085013567ffffffffffffffff81111561067157600080fd5b61067d878288016105cc565b95989497509550505050565b60006020828403121561069b57600080fd5b813567ffffffffffffffff8111156106b257600080fd5b820161014081850312156106c557600080fd5b9392505050565b6000602082840312156106de57600080fd5b813580151581146106c557600080fd5b60008451610700818460208901610575565b601760f91b908301908152845161071e816001840160208901610575565b601760f91b600192909101918201528351610740816002840160208801610575565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e1983360301811261077a57600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212203865c55b39488a05bedce6ddc85b442ae2155e386da02a4aa111d3c93c7abb8b64736f6c634300081b0033";

type RevocationResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevocationResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevocationResolver__factory extends ContractFactory {
  constructor(...args: RevocationResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    eas: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(eas, overrides || {});
  }
  override deploy(
    eas: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(eas, overrides || {}) as Promise<
      RevocationResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RevocationResolver__factory {
    return super.connect(runner) as RevocationResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevocationResolverInterface {
    return new Interface(_abi) as RevocationResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RevocationResolver {
    return new Contract(address, _abi, runner) as unknown as RevocationResolver;
  }
}
