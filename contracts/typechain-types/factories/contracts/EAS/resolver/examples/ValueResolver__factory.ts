/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  ValueResolver,
  ValueResolverInterface,
} from "../../../../../contracts/EAS/resolver/examples/ValueResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEAS",
        name: "eas",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetValue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEAS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPayable",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "attest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPayable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiAttest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiRevoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "revoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61012060405234801561001157600080fd5b506040516108883803806108888339810160408190526100309161007d565b6001608052600360a052600060c052816001600160a01b038116610067576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b031660e05261010052506100b7565b6000806040838503121561009057600080fd5b82516001600160a01b03811681146100a757600080fd5b6020939093015192949293505050565b60805160a05160c05160e051610100516107866101026000396000818161031101526103710152600061043501526000610159015260006101300152600061010701526107866000f3fe6080604052600436106100595760003560e01c806354fd4d501461006557806388e5b2d91461009057806391db0b7e146100b3578063ce46e046146100c6578063e49617e1146100da578063e60c3505146100ed57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a610100565b6040516100879190610571565b60405180910390f35b6100a361009e3660046105f0565b6101a3565b6040519015158152602001610087565b6100a36100c13660046105f0565b610272565b3480156100d257600080fd5b5060016100a3565b6100a36100e8366004610661565b610352565b6100a36100fb366004610661565b610365565b606061012b7f0000000000000000000000000000000000000000000000000000000000000000610397565b6101547f0000000000000000000000000000000000000000000000000000000000000000610397565b61017d7f0000000000000000000000000000000000000000000000000000000000000000610397565b60405160200161018f939291906106a4565b604051602081830303815290604052905090565b60006101ad61042a565b838281146101ce5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102625760008686838181106101ee576101ee610703565b905060200201359050828111156102185760405163044044a560e21b815260040160405180910390fd5b61024589898481811061022d5761022d610703565b905060200281019061023f9190610719565b50600190565b61025657600094505050505061026a565b909103906001016101d2565b506001925050505b949350505050565b600061027c61042a565b8382811461029d5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102625760008686838181106102bd576102bd610703565b905060200201359050828111156102e75760405163044044a560e21b815260040160405180910390fd5b6103358989848181106102fc576102fc610703565b905060200281019061030e9190610719565b507f0000000000000000000000000000000000000000000000000000000000000000821490565b61034657600094505050505061026a565b909103906001016102a1565b600061035c61042a565b60015b92915050565b600061036f61042a565b7f0000000000000000000000000000000000000000000000000000000000000000341461035f565b606060006103a483610475565b600101905060008167ffffffffffffffff8111156103c4576103c461073a565b6040519080825280601f01601f1916602001820160405280156103ee576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846103f857509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461047357604051634ca8886760e01b815260040160405180910390fd5b565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106104b45772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106104e0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106104fe57662386f26fc10000830492506010015b6305f5e1008310610516576305f5e100830492506008015b612710831061052a57612710830492506004015b6064831061053c576064830492506002015b600a831061035f5760010192915050565b60005b83811015610568578181015183820152602001610550565b50506000910152565b602081526000825180602084015261059081604085016020870161054d565b601f01601f19169190910160400192915050565b60008083601f8401126105b657600080fd5b50813567ffffffffffffffff8111156105ce57600080fd5b6020830191508360208260051b85010111156105e957600080fd5b9250929050565b6000806000806040858703121561060657600080fd5b843567ffffffffffffffff81111561061d57600080fd5b610629878288016105a4565b909550935050602085013567ffffffffffffffff81111561064957600080fd5b610655878288016105a4565b95989497509550505050565b60006020828403121561067357600080fd5b813567ffffffffffffffff81111561068a57600080fd5b8201610140818503121561069d57600080fd5b9392505050565b600084516106b681846020890161054d565b601760f91b90830190815284516106d481600184016020890161054d565b601760f91b6001929091019182015283516106f681600284016020880161054d565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e1983360301811261073057600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f8985b855cf7771fddd223cef805aaf79886a4354cc9f529dd9614959a66f6a864736f6c634300081b0033";

type ValueResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ValueResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ValueResolver__factory extends ContractFactory {
  constructor(...args: ValueResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    eas: AddressLike,
    targetValue: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(eas, targetValue, overrides || {});
  }
  override deploy(
    eas: AddressLike,
    targetValue: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(eas, targetValue, overrides || {}) as Promise<
      ValueResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ValueResolver__factory {
    return super.connect(runner) as ValueResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValueResolverInterface {
    return new Interface(_abi) as ValueResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ValueResolver {
    return new Contract(address, _abi, runner) as unknown as ValueResolver;
  }
}
