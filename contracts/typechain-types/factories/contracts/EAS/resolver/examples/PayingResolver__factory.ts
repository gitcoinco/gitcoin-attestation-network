/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PayingResolver,
  PayingResolverInterface,
} from "../../../../../contracts/EAS/resolver/examples/PayingResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEAS",
        name: "eas",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "incentive",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEAS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValue",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPayable",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "attest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPayable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiAttest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "multiRevoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "time",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "revocationTime",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refUID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "revoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61012060405234801561001157600080fd5b50604051610a7b380380610a7b8339810160408190526100309161007d565b6001608052600360a052600060c052816001600160a01b038116610067576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b031660e05261010052506100b7565b6000806040838503121561009057600080fd5b82516001600160a01b03811681146100a757600080fd5b6020939093015192949293505050565b60805160a05160c05160e0516101005161096b61011060003960008181610441015281816104710152818161049f015261051c015260006103fd015260006101590152600061013001526000610107015261096b6000f3fe6080604052600436106100595760003560e01c806354fd4d501461006557806388e5b2d91461009057806391db0b7e146100b3578063ce46e046146100c6578063e49617e1146100da578063e60c3505146100ed57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a610100565b604051610087919061070c565b60405180910390f35b6100a361009e36600461078b565b6101a3565b6040519015158152602001610087565b6100a36100c136600461078b565b610272565b3480156100d257600080fd5b5060016100a3565b6100a36100e83660046107fc565b610331565b6100a36100fb3660046107fc565b61034b565b606061012b7f000000000000000000000000000000000000000000000000000000000000000061035f565b6101547f000000000000000000000000000000000000000000000000000000000000000061035f565b61017d7f000000000000000000000000000000000000000000000000000000000000000061035f565b60405160200161018f9392919061083f565b604051602081830303815290604052905090565b60006101ad6103f2565b838281146101ce5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102625760008686838181106101ee576101ee61089e565b905060200201359050828111156102185760405163044044a560e21b815260040160405180910390fd5b61024589898481811061022d5761022d61089e565b905060200281019061023f91906108b4565b8261043d565b61025657600094505050505061026a565b909103906001016101d2565b506001925050505b949350505050565b600061027c6103f2565b8382811461029d5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156102625760008686838181106102bd576102bd61089e565b905060200201359050828111156102e75760405163044044a560e21b815260040160405180910390fd5b6103148989848181106102fc576102fc61089e565b905060200281019061030e91906108b4565b826104ed565b61032557600094505050505061026a565b909103906001016102a1565b600061033b6103f2565b610345823461043d565b92915050565b60006103556103f2565b61034582346104ed565b6060600061036c83610570565b600101905060008167ffffffffffffffff81111561038c5761038c6108d5565b6040519080825280601f01601f1916602001820160405280156103b6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846103c057509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461043b57604051634ca8886760e01b815260040160405180910390fd5b565b60007f000000000000000000000000000000000000000000000000000000000000000082101561046f57506000610345565b7f00000000000000000000000000000000000000000000000000000000000000008211156104e4576104e46104c47f0000000000000000000000000000000000000000000000000000000000000000846108eb565b6104d5610100860160e0870161090c565b6001600160a01b031690610648565b50600192915050565b600081156104fd57506000610345565b61050e610100840160e0850161090c565b6001600160a01b03166108fc7f00000000000000000000000000000000000000000000000000000000000000009081150290604051600060405180830381858888f19350505050158015610566573d6000803e3d6000fd5b5060019392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106105af5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106105db576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106105f957662386f26fc10000830492506010015b6305f5e1008310610611576305f5e100830492506008015b612710831061062557612710830492506004015b60648310610637576064830492506002015b600a83106103455760010192915050565b8047101561066f5760405163cd78605960e01b815230600482015260240160405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146106bc576040519150601f19603f3d011682016040523d82523d6000602084013e6106c1565b606091505b50509050806106e357604051630a12f52160e11b815260040160405180910390fd5b505050565b60005b838110156107035781810151838201526020016106eb565b50506000910152565b602081526000825180602084015261072b8160408501602087016106e8565b601f01601f19169190910160400192915050565b60008083601f84011261075157600080fd5b50813567ffffffffffffffff81111561076957600080fd5b6020830191508360208260051b850101111561078457600080fd5b9250929050565b600080600080604085870312156107a157600080fd5b843567ffffffffffffffff8111156107b857600080fd5b6107c48782880161073f565b909550935050602085013567ffffffffffffffff8111156107e457600080fd5b6107f08782880161073f565b95989497509550505050565b60006020828403121561080e57600080fd5b813567ffffffffffffffff81111561082557600080fd5b8201610140818503121561083857600080fd5b9392505050565b600084516108518184602089016106e8565b601760f91b908301908152845161086f8160018401602089016106e8565b601760f91b6001929091019182015283516108918160028401602088016106e8565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e198336030181126108cb57600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b8181038181111561034557634e487b7160e01b600052601160045260246000fd5b60006020828403121561091e57600080fd5b81356001600160a01b038116811461083857600080fdfea2646970667358221220f6be3d8f932e72fa9657667bc13390c083003af09a23adfddcce647a5c459b9064736f6c634300081b0033";

type PayingResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayingResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PayingResolver__factory extends ContractFactory {
  constructor(...args: PayingResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    eas: AddressLike,
    incentive: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(eas, incentive, overrides || {});
  }
  override deploy(
    eas: AddressLike,
    incentive: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(eas, incentive, overrides || {}) as Promise<
      PayingResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PayingResolver__factory {
    return super.connect(runner) as PayingResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayingResolverInterface {
    return new Interface(_abi) as PayingResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PayingResolver {
    return new Contract(address, _abi, runner) as unknown as PayingResolver;
  }
}
