/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SchemaRegistry,
  SchemaRegistryInterface,
} from "../../../contracts/EAS/SchemaRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "registerer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "contract ISchemaResolver",
            name: "resolver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "string",
            name: "schema",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct SchemaRecord",
        name: "schema",
        type: "tuple",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
    ],
    name: "getSchema",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "contract ISchemaResolver",
            name: "resolver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "string",
            name: "schema",
            type: "string",
          },
        ],
        internalType: "struct SchemaRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "schema",
        type: "string",
      },
      {
        internalType: "contract ISchemaResolver",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "revocable",
        type: "bool",
      },
    ],
    name: "register",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052348015600f57600080fd5b506001608052600360a052600060c05260805160a05160c05161091261004b600039600060fe0152600060d50152600060ac01526109126000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806354fd4d501461004657806360d7a27814610064578063a2ea7c6e14610085575b600080fd5b61004e6100a5565b60405161005b91906105a9565b60405180910390f35b6100776100723660046105d8565b610148565b60405190815260200161005b565b610098610093366004610679565b6102a3565b60405161005b9190610692565b60606100d07f00000000000000000000000000000000000000000000000000000000000000006103ad565b6100f97f00000000000000000000000000000000000000000000000000000000000000006103ad565b6101227f00000000000000000000000000000000000000000000000000000000000000006103ad565b604051602001610134939291906106dd565b604051602081830303815290604052905090565b60008060405180608001604052806000801b8152602001856001600160a01b03168152602001841515815260200187878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525092935091506101bd905082610440565b600081815260208190526040902054909150156101ed5760405163119b4fd360e11b815260040160405180910390fd5b808252600081815260208181526040918290208451815590840151600182018054938601511515600160a01b026001600160a81b03199094166001600160a01b0390921691909117929092179091556060830151839190600282019061025390826107db565b50905050336001600160a01b0316817fd0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e846040516102919190610692565b60405180910390a39695505050505050565b60408051608081018252600080825260208201819052918101919091526060808201526000828152602081815260409182902082516080810184528154815260018201546001600160a01b03811693820193909352600160a01b90920460ff1615159282019290925260028201805491929160608401919061032490610752565b80601f016020809104026020016040519081016040528092919081815260200182805461035090610752565b801561039d5780601f106103725761010080835404028352916020019161039d565b820191906000526020600020905b81548152906001019060200180831161038057829003601f168201915b5050505050815250509050919050565b606060006103ba83610480565b600101905060008167ffffffffffffffff8111156103da576103da61073c565b6040519080825280601f01601f191660200182016040528015610404576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461040e57509392505050565b60008160600151826020015183604001516040516020016104639392919061089a565b604051602081830303815290604052805190602001209050919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106104bf5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106104eb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061050957662386f26fc10000830492506010015b6305f5e1008310610521576305f5e100830492506008015b612710831061053557612710830492506004015b60648310610547576064830492506002015b600a8310610553576001015b92915050565b60005b8381101561057457818101518382015260200161055c565b50506000910152565b60008151808452610595816020860160208601610559565b601f01601f19169290920160200192915050565b6020815260006105bc602083018461057d565b9392505050565b803580151581146105d357600080fd5b919050565b600080600080606085870312156105ee57600080fd5b843567ffffffffffffffff81111561060557600080fd5b8501601f8101871361061657600080fd5b803567ffffffffffffffff81111561062d57600080fd5b87602082840101111561063f57600080fd5b6020918201955093508501356001600160a01b038116811461066057600080fd5b915061066e604086016105c3565b905092959194509250565b60006020828403121561068b57600080fd5b5035919050565b602081528151602082015260018060a01b036020830151166040820152604082015115156060820152600060608301516080808401526106d560a084018261057d565b949350505050565b600084516106ef818460208901610559565b601760f91b908301908152845161070d816001840160208901610559565b601760f91b60019290910191820152835161072f816002840160208801610559565b0160020195945050505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061076657607f821691505b60208210810361078657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156107d657806000526020600020601f840160051c810160208510156107b35750805b601f840160051c820191505b818110156107d357600081556001016107bf565b50505b505050565b815167ffffffffffffffff8111156107f5576107f561073c565b610809816108038454610752565b8461078c565b6020601f82116001811461083d57600083156108255750848201515b600019600385901b1c1916600184901b1784556107d3565b600084815260208120601f198516915b8281101561086d578785015182556020948501946001909201910161084d565b508482101561088b5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600084516108ac818460208901610559565b60609490941b6bffffffffffffffffffffffff19169190930190815290151560f81b60148201526015019291505056fea26469706673582212205ac3f72476f08481f7f27be657e83f644d51997c5c8e563649342a9f2f98d47c64736f6c634300081b0033";

type SchemaRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SchemaRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SchemaRegistry__factory extends ContractFactory {
  constructor(...args: SchemaRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SchemaRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SchemaRegistry__factory {
    return super.connect(runner) as SchemaRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SchemaRegistryInterface {
    return new Interface(_abi) as SchemaRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SchemaRegistry {
    return new Contract(address, _abi, runner) as unknown as SchemaRegistry;
  }
}
