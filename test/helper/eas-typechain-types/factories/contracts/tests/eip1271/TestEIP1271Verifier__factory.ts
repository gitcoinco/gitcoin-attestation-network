/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TestEIP1271Verifier,
  TestEIP1271VerifierInterface,
} from "../../../../contracts/tests/eip1271/TestEIP1271Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DeadlineExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldNonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newNonce",
        type: "uint256",
      },
    ],
    name: "NonceIncreased",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAttestTypeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRevokeTypeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newNonce",
        type: "uint256",
      },
    ],
    name: "increaseNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "expirationTime",
                type: "uint64",
              },
              {
                internalType: "bool",
                name: "revocable",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "refUID",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct AttestationRequestData",
            name: "data",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Signature",
            name: "signature",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
        ],
        internalType: "struct DelegatedAttestationRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "verifyAttest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "uid",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct RevocationRequestData",
            name: "data",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Signature",
            name: "signature",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "revoker",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
        ],
        internalType: "struct DelegatedRevocationRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "verifyRevoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101c060405234801561001157600080fd5b50604051611b5d380380611b5d833981016040819052610030916101e1565b6040805180820190915260058152640312e332e360dc1b60208201526001608052600360a052600060c08190528291908290829061006f90839061012d565b6101805261007e81600161012d565b6101a05281516020808401919091206101405281519082012061016052466101005261010e6101405161016051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60e052505030610120526002610124838261031c565b50505050610431565b60006020835110156101495761014283610160565b905061015a565b81610154848261031c565b5060ff90505b92915050565b600080829050601f81511115610194578260405163305a27a960e01b815260040161018b91906103da565b60405180910390fd5b805161019f8261040d565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156101d85781810151838201526020016101c0565b50506000910152565b6000602082840312156101f357600080fd5b81516001600160401b0381111561020957600080fd5b8201601f8101841361021a57600080fd5b80516001600160401b03811115610233576102336101a7565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610261576102616101a7565b60405281815282820160200186101561027957600080fd5b61028a8260208301602086016101bd565b95945050505050565b600181811c908216806102a757607f821691505b6020821081036102c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561031757806000526020600020601f840160051c810160208510156102f45750805b601f840160051c820191505b818110156103145760008155600101610300565b50505b505050565b81516001600160401b03811115610335576103356101a7565b610349816103438454610293565b846102cd565b6020601f82116001811461037d57600083156103655750848201515b600019600385901b1c1916600184901b178455610314565b600084815260208120601f198516915b828110156103ad578785015182556020948501946001909201910161038d565b50848210156103cb5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60208152600082518060208401526103f98160408501602087016101bd565b601f01601f19169190910160400192915050565b805160208083015191908110156102c75760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516116b16104ac6000396000610515015260006104e8015260006109c30152600061099b015260006108f6015260006109200152600061094a015260006102ba015260006102910152600061026801526116b16000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806384b0196e11610076578063b83010d31161005b578063b83010d31461018e578063dda94e21146101b4578063ed24911d146101c757600080fd5b806384b0196e14610160578063b82b7acc1461017b57600080fd5b80632d0335ab116100a75780632d0335ab1461010d57806354fd4d501461014357806379f7573a1461014b57600080fd5b806312b11a17146100c357806317d7de7c146100f8575b600080fd5b7ffeb2925a02bae3dae48d424a0437a2b6ac939aa9230ddc55a1a76f065d9880765b6040519081526020015b60405180910390f35b6101006101cf565b6040516100ef9190610fe9565b6100e561011b36600461102c565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b610100610261565b61015e610159366004611047565b610304565b005b61016861039d565b6040516100ef9796959493929190611060565b61015e6101893660046112ed565b6103ff565b7fb5d556f07587ec0f08cf386545cc4362c702a001650c2058002615ee5c9d1e756100e5565b61015e6101c2366004611420565b61040b565b6100e5610414565b6060600280546101de906114d6565b80601f016020809104026020016040519081016040528092919081815260200182805461020a906114d6565b80156102575780601f1061022c57610100808354040283529160200191610257565b820191906000526020600020905b81548152906001019060200180831161023a57829003601f168201915b5050505050905090565b606061028c7f0000000000000000000000000000000000000000000000000000000000000000610423565b6102b57f0000000000000000000000000000000000000000000000000000000000000000610423565b6102de7f0000000000000000000000000000000000000000000000000000000000000000610423565b6040516020016102f093929190611529565b604051602081830303815290604052905090565b3360009081526003602052604090205480821161034d576040517f756688fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526003602090815260409182902084905581518381529081018490527f57b09af877df9068fd60a69d7b21f5576b8b38955812d6ae4ac52942f1e38fb7910160405180910390a15050565b6000606080600080600060606103b16104e1565b6103b961050e565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b6104088161053b565b50565b61040881610793565b600061041e6108dc565b905090565b6060600061043083610a14565b600101905060008167ffffffffffffffff81111561045057610450611121565b6040519080825280601f01601f19166020018201604052801561047a576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461048457509392505050565b606061041e7f00000000000000000000000000000000000000000000000000000000000000006000610af7565b606061041e7f00000000000000000000000000000000000000000000000000000000000000006001610af7565b608081015167ffffffffffffffff161580159061056f57504267ffffffffffffffff16816080015167ffffffffffffffff16105b156105a6576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020808201516040808401516060808601518651855186880151868801519488015160808901518051908b012060a08a015173ffffffffffffffffffffffffffffffffffffffff871660009081526003909c52988b2080549a9b989a98996106e1997ffeb2925a02bae3dae48d424a0437a2b6ac939aa9230ddc55a1a76f065d988076999493928c610637836115c0565b919050558e608001516040516020016106c69b9a999897969594939291909a8b5273ffffffffffffffffffffffffffffffffffffffff998a1660208c015260408b019890985295909716606089015267ffffffffffffffff938416608089015291151560a088015260c087015260e0860152610100850193909352610120840152166101408201526101600190565b60405160208183030381529060405280519060200120610ba3565b905061075784606001518284602001518560400151866000015160405160200161074393929190928352602083019190915260f81b7fff0000000000000000000000000000000000000000000000000000000000000016604082015260410190565b604051602081830303815290604052610beb565b61078d576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b608081015167ffffffffffffffff16158015906107c757504267ffffffffffffffff16816080015167ffffffffffffffff16105b156107fe576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020808201516040808401516060850151855184518587015173ffffffffffffffffffffffffffffffffffffffff84166000908152600390985294872080549697949694956106e1957fb5d556f07587ec0f08cf386545cc4362c702a001650c2058002615ee5c9d1e759594939288610876836115c0565b909155506080808c015160408051602081019990995273ffffffffffffffffffffffffffffffffffffffff9097169688019690965260608701949094529285019190915260a084015260c083015267ffffffffffffffff1660e0820152610100016106c6565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614801561094257507f000000000000000000000000000000000000000000000000000000000000000046145b1561096c57507f000000000000000000000000000000000000000000000000000000000000000090565b61041e604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610a5d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610a89576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610aa757662386f26fc10000830492506010015b6305f5e1008310610abf576305f5e100830492506008015b6127108310610ad357612710830492506004015b60648310610ae5576064830492506002015b600a8310610af1576001015b92915050565b606060ff8314610b1157610b0a83610c67565b9050610af1565b818054610b1d906114d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b49906114d6565b8015610b965780601f10610b6b57610100808354040283529160200191610b96565b820191906000526020600020905b815481529060010190602001808311610b7957829003601f168201915b5050505050905092915050565b6000610af1610bb06108dc565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6000806000610bfa8585610ca6565b5090925090506000816003811115610c1457610c1461161f565b148015610c4c57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80610c5d5750610c5d868686610cf3565b9695505050505050565b60606000610c7483610e40565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b60008060008351604103610ce05760208401516040850151606086015160001a610cd288828585610e81565b955095509550505050610cec565b50508151600091506002905b9250925092565b60008060008573ffffffffffffffffffffffffffffffffffffffff168585604051602401610d2292919061164e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f1626ba7e0000000000000000000000000000000000000000000000000000000017905251610da3919061166f565b600060405180830381855afa9150503d8060008114610dde576040519150601f19603f3d011682016040523d82523d6000602084013e610de3565b606091505b5091509150818015610df757506020815110155b8015610c5d575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090610e35908301602090810190840161168b565b149695505050505050565b600060ff8216601f811115610af1576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610ebc5750600091506003905082610f71565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610f10573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610f6757506000925060019150829050610f71565b9250600091508190505b9450945094915050565b60005b83811015610f96578181015183820152602001610f7e565b50506000910152565b60008151808452610fb7816020860160208601610f7b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610ffc6020830184610f9f565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461102757600080fd5b919050565b60006020828403121561103e57600080fd5b610ffc82611003565b60006020828403121561105957600080fd5b5035919050565b7fff000000000000000000000000000000000000000000000000000000000000008816815260e06020820152600061109b60e0830189610f9f565b82810360408401526110ad8189610f9f565b6060840188905273ffffffffffffffffffffffffffffffffffffffff8716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b818110156111105783518352602093840193909201916001016110f2565b50909b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561117357611173611121565b60405290565b60405160c0810167ffffffffffffffff8111828210171561117357611173611121565b6040805190810167ffffffffffffffff8111828210171561117357611173611121565b803567ffffffffffffffff8116811461102757600080fd5b600082601f8301126111e857600080fd5b813567ffffffffffffffff81111561120257611202611121565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810167ffffffffffffffff8111828210171561124f5761124f611121565b60405281815283820160200185101561126757600080fd5b816020850160208301376000918101602001919091529392505050565b60006060828403121561129657600080fd5b6040516060810167ffffffffffffffff811182821017156112b9576112b9611121565b604052905080823560ff811681146112d057600080fd5b815260208381013590820152604092830135920191909152919050565b6000602082840312156112ff57600080fd5b813567ffffffffffffffff81111561131657600080fd5b820160e0818503121561132857600080fd5b611330611150565b81358152602082013567ffffffffffffffff81111561134e57600080fd5b820160c0818703121561136057600080fd5b611368611179565b61137182611003565b815261137f602083016111bf565b60208201526040820135801515811461139757600080fd5b604082015260608281013590820152608082013567ffffffffffffffff8111156113c057600080fd5b6113cc888285016111d7565b60808301525060a0918201359181019190915260208201526113f18560408401611284565b604082015261140260a08301611003565b606082015261141360c083016111bf565b6080820152949350505050565b60008183036101008112801561143557600080fd5b506000611440611150565b8435815260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084011215611473578182fd5b61147b61119c565b6020868101358252604087013581830181905290830182905290935091506114a68660608701611284565b60408201526114b760c08601611003565b60608201526114c860e086016111bf565b608082015295945050505050565b600181811c908216806114ea57607f821691505b602082108103611523577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000845161153b818460208901610f7b565b7f2e000000000000000000000000000000000000000000000000000000000000009083019081528451611575816001840160208901610f7b565b7f2e000000000000000000000000000000000000000000000000000000000000006001929091019182015283516115b3816002840160208801610f7b565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611618577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8281526040602082015260006116676040830184610f9f565b949350505050565b60008251611681818460208701610f7b565b9190910192915050565b60006020828403121561169d57600080fd5b505191905056fea164736f6c634300081b000a";

type TestEIP1271VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestEIP1271VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestEIP1271Verifier__factory extends ContractFactory {
  constructor(...args: TestEIP1271VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, overrides || {});
  }
  override deploy(
    name: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, overrides || {}) as Promise<
      TestEIP1271Verifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestEIP1271Verifier__factory {
    return super.connect(runner) as TestEIP1271Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestEIP1271VerifierInterface {
    return new Interface(_abi) as TestEIP1271VerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestEIP1271Verifier {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestEIP1271Verifier;
  }
}
