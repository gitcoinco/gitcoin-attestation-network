/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TestEIP1271Signer,
  TestEIP1271SignerInterface,
} from "../../../../contracts/tests/eip1271/TestEIP1271Signer";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "mockSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506104638061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631626ba7e1461003b578063ba9d2acb14610083575b600080fd5b61004e6100493660046101dd565b610098565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b6100966100913660046101dd565b6101be565b005b600083815260208190526040812080548291906100b49061025b565b80601f01602080910402602001604051908101604052809291908181526020018280546100e09061025b565b801561012d5780601f106101025761010080835404028352916020019161012d565b820191906000526020600020905b81548152906001019060200180831161011057829003601f168201915b50505050509050838390508151148015610164575083836040516101529291906102ae565b60405180910390208180519060200120145b1561019257507f1626ba7e0000000000000000000000000000000000000000000000000000000090506101b7565b507fffffffff0000000000000000000000000000000000000000000000000000000090505b9392505050565b60008381526020819052604090206101d782848361033c565b50505050565b6000806000604084860312156101f257600080fd5b83359250602084013567ffffffffffffffff81111561021057600080fd5b8401601f8101861361022157600080fd5b803567ffffffffffffffff81111561023857600080fd5b86602082840101111561024a57600080fd5b939660209190910195509293505050565b600181811c9082168061026f57607f821691505b6020821081036102a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f82111561033757806000526020600020601f840160051c810160208510156103145750805b601f840160051c820191505b818110156103345760008155600101610320565b50505b505050565b67ffffffffffffffff831115610354576103546102be565b61036883610362835461025b565b836102ed565b6000601f8411600181146103ba57600085156103845750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610334565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561040957868501358255602094850194600190920191016103e9565b5086821015610444577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b018355505050505056fea164736f6c634300081b000a";

type TestEIP1271SignerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestEIP1271SignerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestEIP1271Signer__factory extends ContractFactory {
  constructor(...args: TestEIP1271SignerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestEIP1271Signer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestEIP1271Signer__factory {
    return super.connect(runner) as TestEIP1271Signer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestEIP1271SignerInterface {
    return new Interface(_abi) as TestEIP1271SignerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestEIP1271Signer {
    return new Contract(address, _abi, runner) as unknown as TestEIP1271Signer;
  }
}
